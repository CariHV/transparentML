Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
X = default_df[["income", "balance", "student"]].values
Y = default_df["default"]

for s in range(1, 4):
    print("Random seed = {}".format(s))
    np.random.seed(s)
    X_train, X_test, y_train, y_test = train_test_split(X, Y.ravel(), test_size=0.5)

    # Logistic regression
    logit = LogisticRegression()
    model_logit = logit.fit(X_train, y_train)

    # Predict
    y_pred = model_logit.predict(X_test)

    total_error_rate_pct = mean_squared_error(y_test, y_pred) * 100
    print("total_error_rate: {}%".format(total_error_rate_pct))


# Including a dummy variable for student didn't leads to a reduction in the test error rate.
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn [14], line 11[0m
[1;32m      9[0m [38;5;66;03m# Logistic regression[39;00m
[1;32m     10[0m logit [38;5;241m=[39m LogisticRegression()
[0;32m---> 11[0m model_logit [38;5;241m=[39m [43mlogit[49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mX_train[49m[43m,[49m[43m [49m[43my_train[49m[43m)[49m
[1;32m     13[0m [38;5;66;03m# Predict[39;00m
[1;32m     14[0m y_pred [38;5;241m=[39m model_logit[38;5;241m.[39mpredict(X_test)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/sklearn/linear_model/_logistic.py:1138[0m, in [0;36mLogisticRegression.fit[0;34m(self, X, y, sample_weight)[0m
[1;32m   1135[0m [38;5;28;01melse[39;00m:
[1;32m   1136[0m     _dtype [38;5;241m=[39m [np[38;5;241m.[39mfloat64, np[38;5;241m.[39mfloat32]
[0;32m-> 1138[0m X, y [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_data[49m[43m([49m
[1;32m   1139[0m [43m    [49m[43mX[49m[43m,[49m
[1;32m   1140[0m [43m    [49m[43my[49m[43m,[49m
[1;32m   1141[0m [43m    [49m[43maccept_sparse[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mcsr[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m   1142[0m [43m    [49m[43mdtype[49m[38;5;241;43m=[39;49m[43m_dtype[49m[43m,[49m
[1;32m   1143[0m [43m    [49m[43morder[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mC[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m   1144[0m [43m    [49m[43maccept_large_sparse[49m[38;5;241;43m=[39;49m[43msolver[49m[43m [49m[38;5;129;43;01mnot[39;49;00m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mliblinear[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43msag[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43msaga[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m   1145[0m [43m[49m[43m)[49m
[1;32m   1146[0m check_classification_targets(y)
[1;32m   1147[0m [38;5;28mself[39m[38;5;241m.[39mclasses_ [38;5;241m=[39m np[38;5;241m.[39munique(y)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/sklearn/base.py:596[0m, in [0;36mBaseEstimator._validate_data[0;34m(self, X, y, reset, validate_separately, **check_params)[0m
[1;32m    594[0m         y [38;5;241m=[39m check_array(y, input_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m, [38;5;241m*[39m[38;5;241m*[39mcheck_y_params)
[1;32m    595[0m     [38;5;28;01melse[39;00m:
[0;32m--> 596[0m         X, y [38;5;241m=[39m [43mcheck_X_y[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mcheck_params[49m[43m)[49m
[1;32m    597[0m     out [38;5;241m=[39m X, y
[1;32m    599[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m no_val_X [38;5;129;01mand[39;00m check_params[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mensure_2d[39m[38;5;124m"[39m, [38;5;28;01mTrue[39;00m):

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/sklearn/utils/validation.py:1074[0m, in [0;36mcheck_X_y[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)[0m
[1;32m   1069[0m         estimator_name [38;5;241m=[39m _check_estimator_name(estimator)
[1;32m   1070[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1071[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mestimator_name[38;5;132;01m}[39;00m[38;5;124m requires y to be passed, but the target y is None[39m[38;5;124m"[39m
[1;32m   1072[0m     )
[0;32m-> 1074[0m X [38;5;241m=[39m [43mcheck_array[49m[43m([49m
[1;32m   1075[0m [43m    [49m[43mX[49m[43m,[49m
[1;32m   1076[0m [43m    [49m[43maccept_sparse[49m[38;5;241;43m=[39;49m[43maccept_sparse[49m[43m,[49m
[1;32m   1077[0m [43m    [49m[43maccept_large_sparse[49m[38;5;241;43m=[39;49m[43maccept_large_sparse[49m[43m,[49m
[1;32m   1078[0m [43m    [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m
[1;32m   1079[0m [43m    [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m
[1;32m   1080[0m [43m    [49m[43mcopy[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m,[49m
[1;32m   1081[0m [43m    [49m[43mforce_all_finite[49m[38;5;241;43m=[39;49m[43mforce_all_finite[49m[43m,[49m
[1;32m   1082[0m [43m    [49m[43mensure_2d[49m[38;5;241;43m=[39;49m[43mensure_2d[49m[43m,[49m
[1;32m   1083[0m [43m    [49m[43mallow_nd[49m[38;5;241;43m=[39;49m[43mallow_nd[49m[43m,[49m
[1;32m   1084[0m [43m    [49m[43mensure_min_samples[49m[38;5;241;43m=[39;49m[43mensure_min_samples[49m[43m,[49m
[1;32m   1085[0m [43m    [49m[43mensure_min_features[49m[38;5;241;43m=[39;49m[43mensure_min_features[49m[43m,[49m
[1;32m   1086[0m [43m    [49m[43mestimator[49m[38;5;241;43m=[39;49m[43mestimator[49m[43m,[49m
[1;32m   1087[0m [43m    [49m[43minput_name[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mX[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m   1088[0m [43m[49m[43m)[49m
[1;32m   1090[0m y [38;5;241m=[39m _check_y(y, multi_output[38;5;241m=[39mmulti_output, y_numeric[38;5;241m=[39my_numeric, estimator[38;5;241m=[39mestimator)
[1;32m   1092[0m check_consistent_length(X, y)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/sklearn/utils/validation.py:856[0m, in [0;36mcheck_array[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)[0m
[1;32m    854[0m         array [38;5;241m=[39m array[38;5;241m.[39mastype(dtype, casting[38;5;241m=[39m[38;5;124m"[39m[38;5;124munsafe[39m[38;5;124m"[39m, copy[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[1;32m    855[0m     [38;5;28;01melse[39;00m:
[0;32m--> 856[0m         array [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43masarray[49m[43m([49m[43marray[49m[43m,[49m[43m [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m)[49m
[1;32m    857[0m [38;5;28;01mexcept[39;00m ComplexWarning [38;5;28;01mas[39;00m complex_warning:
[1;32m    858[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    859[0m         [38;5;124m"[39m[38;5;124mComplex data not supported[39m[38;5;130;01m\n[39;00m[38;5;132;01m{}[39;00m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mformat(array)
[1;32m    860[0m     ) [38;5;28;01mfrom[39;00m [38;5;21;01mcomplex_warning[39;00m

[0;31mValueError[0m: could not convert string to float: 'No'
ValueError: could not convert string to float: 'No'

