Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# In R, I exported the dataset from package 'ISLR' to an Excel file
data_url = "https://github.com/pykale/transparentML/raw/main/data/Default.xlsx"
df = pd.read_excel(data_url)

# Note: factorize() returns two objects: a label array and an array with the unique values.
# We are only interested in the first object.
df["default2"] = df.default.factorize()[0]
df["student2"] = df.student.factorize()[0]
df.head(3)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mHTTPError[0m                                 Traceback (most recent call last)
Cell [0;32mIn [2], line 3[0m
[1;32m      1[0m [38;5;66;03m# In R, I exported the dataset from package 'ISLR' to an Excel file[39;00m
[1;32m      2[0m data_url [38;5;241m=[39m [38;5;124m"[39m[38;5;124mhttps://github.com/pykale/transparentML/raw/main/data/Default.xlsx[39m[38;5;124m"[39m
[0;32m----> 3[0m df [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mread_excel[49m[43m([49m[43mdata_url[49m[43m)[49m
[1;32m      5[0m [38;5;66;03m# Note: factorize() returns two objects: a label array and an array with the unique values.[39;00m
[1;32m      6[0m [38;5;66;03m# We are only interested in the first object.[39;00m
[1;32m      7[0m df[[38;5;124m"[39m[38;5;124mdefault2[39m[38;5;124m"[39m] [38;5;241m=[39m df[38;5;241m.[39mdefault[38;5;241m.[39mfactorize()[[38;5;241m0[39m]

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/pandas/util/_decorators.py:211[0m, in [0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    209[0m     [38;5;28;01melse[39;00m:
[1;32m    210[0m         kwargs[new_arg_name] [38;5;241m=[39m new_arg_value
[0;32m--> 211[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/pandas/util/_decorators.py:331[0m, in [0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    325[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(args) [38;5;241m>[39m num_allow_args:
[1;32m    326[0m     warnings[38;5;241m.[39mwarn(
[1;32m    327[0m         msg[38;5;241m.[39mformat(arguments[38;5;241m=[39m_format_argument_list(allow_args)),
[1;32m    328[0m         [38;5;167;01mFutureWarning[39;00m,
[1;32m    329[0m         stacklevel[38;5;241m=[39mfind_stack_level(),
[1;32m    330[0m     )
[0;32m--> 331[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/pandas/io/excel/_base.py:482[0m, in [0;36mread_excel[0;34m(io, sheet_name, header, names, index_col, usecols, squeeze, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, thousands, decimal, comment, skipfooter, convert_float, mangle_dupe_cols, storage_options)[0m
[1;32m    480[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(io, ExcelFile):
[1;32m    481[0m     should_close [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 482[0m     io [38;5;241m=[39m [43mExcelFile[49m[43m([49m[43mio[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m[43m [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m)[49m
[1;32m    483[0m [38;5;28;01melif[39;00m engine [38;5;129;01mand[39;00m engine [38;5;241m!=[39m io[38;5;241m.[39mengine:
[1;32m    484[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    485[0m         [38;5;124m"[39m[38;5;124mEngine should not be specified when passing [39m[38;5;124m"[39m
[1;32m    486[0m         [38;5;124m"[39m[38;5;124man ExcelFile - ExcelFile already has the engine set[39m[38;5;124m"[39m
[1;32m    487[0m     )

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/pandas/io/excel/_base.py:1652[0m, in [0;36mExcelFile.__init__[0;34m(self, path_or_buffer, engine, storage_options)[0m
[1;32m   1650[0m     ext [38;5;241m=[39m [38;5;124m"[39m[38;5;124mxls[39m[38;5;124m"[39m
[1;32m   1651[0m [38;5;28;01melse[39;00m:
[0;32m-> 1652[0m     ext [38;5;241m=[39m [43minspect_excel_format[49m[43m([49m
[1;32m   1653[0m [43m        [49m[43mcontent_or_path[49m[38;5;241;43m=[39;49m[43mpath_or_buffer[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m
[1;32m   1654[0m [43m    [49m[43m)[49m
[1;32m   1655[0m     [38;5;28;01mif[39;00m ext [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1656[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1657[0m             [38;5;124m"[39m[38;5;124mExcel file format cannot be determined, you must specify [39m[38;5;124m"[39m
[1;32m   1658[0m             [38;5;124m"[39m[38;5;124man engine manually.[39m[38;5;124m"[39m
[1;32m   1659[0m         )

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/pandas/io/excel/_base.py:1525[0m, in [0;36minspect_excel_format[0;34m(content_or_path, storage_options)[0m
[1;32m   1522[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(content_or_path, [38;5;28mbytes[39m):
[1;32m   1523[0m     content_or_path [38;5;241m=[39m BytesIO(content_or_path)
[0;32m-> 1525[0m [38;5;28;01mwith[39;00m [43mget_handle[49m[43m([49m
[1;32m   1526[0m [43m    [49m[43mcontent_or_path[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m[43m [49m[43mis_text[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m
[1;32m   1527[0m [43m[49m[43m)[49m [38;5;28;01mas[39;00m handle:
[1;32m   1528[0m     stream [38;5;241m=[39m handle[38;5;241m.[39mhandle
[1;32m   1529[0m     stream[38;5;241m.[39mseek([38;5;241m0[39m)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/pandas/io/common.py:713[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    710[0m     codecs[38;5;241m.[39mlookup_error(errors)
[1;32m    712[0m [38;5;66;03m# open URLs[39;00m
[0;32m--> 713[0m ioargs [38;5;241m=[39m [43m_get_filepath_or_buffer[49m[43m([49m
[1;32m    714[0m [43m    [49m[43mpath_or_buf[49m[43m,[49m
[1;32m    715[0m [43m    [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    716[0m [43m    [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m    717[0m [43m    [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m    718[0m [43m    [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    719[0m [43m[49m[43m)[49m
[1;32m    721[0m handle [38;5;241m=[39m ioargs[38;5;241m.[39mfilepath_or_buffer
[1;32m    722[0m handles: [38;5;28mlist[39m[BaseBuffer]

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/pandas/io/common.py:363[0m, in [0;36m_get_filepath_or_buffer[0;34m(filepath_or_buffer, encoding, compression, mode, storage_options)[0m
[1;32m    361[0m [38;5;66;03m# assuming storage_options is to be interpreted as headers[39;00m
[1;32m    362[0m req_info [38;5;241m=[39m urllib[38;5;241m.[39mrequest[38;5;241m.[39mRequest(filepath_or_buffer, headers[38;5;241m=[39mstorage_options)
[0;32m--> 363[0m [38;5;28;01mwith[39;00m [43murlopen[49m[43m([49m[43mreq_info[49m[43m)[49m [38;5;28;01mas[39;00m req:
[1;32m    364[0m     content_encoding [38;5;241m=[39m req[38;5;241m.[39mheaders[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mContent-Encoding[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m    365[0m     [38;5;28;01mif[39;00m content_encoding [38;5;241m==[39m [38;5;124m"[39m[38;5;124mgzip[39m[38;5;124m"[39m:
[1;32m    366[0m         [38;5;66;03m# Override compression based on Content-Encoding header[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/pandas/io/common.py:265[0m, in [0;36murlopen[0;34m(*args, **kwargs)[0m
[1;32m    259[0m [38;5;124;03m"""[39;00m
[1;32m    260[0m [38;5;124;03mLazy-import wrapper for stdlib urlopen, as that imports a big chunk of[39;00m
[1;32m    261[0m [38;5;124;03mthe stdlib.[39;00m
[1;32m    262[0m [38;5;124;03m"""[39;00m
[1;32m    263[0m [38;5;28;01mimport[39;00m [38;5;21;01murllib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mrequest[39;00m
[0;32m--> 265[0m [38;5;28;01mreturn[39;00m [43murllib[49m[38;5;241;43m.[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/urllib/request.py:222[0m, in [0;36murlopen[0;34m(url, data, timeout, cafile, capath, cadefault, context)[0m
[1;32m    220[0m [38;5;28;01melse[39;00m:
[1;32m    221[0m     opener [38;5;241m=[39m _opener
[0;32m--> 222[0m [38;5;28;01mreturn[39;00m [43mopener[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/urllib/request.py:531[0m, in [0;36mOpenerDirector.open[0;34m(self, fullurl, data, timeout)[0m
[1;32m    529[0m [38;5;28;01mfor[39;00m processor [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mprocess_response[38;5;241m.[39mget(protocol, []):
[1;32m    530[0m     meth [38;5;241m=[39m [38;5;28mgetattr[39m(processor, meth_name)
[0;32m--> 531[0m     response [38;5;241m=[39m [43mmeth[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mresponse[49m[43m)[49m
[1;32m    533[0m [38;5;28;01mreturn[39;00m response

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/urllib/request.py:640[0m, in [0;36mHTTPErrorProcessor.http_response[0;34m(self, request, response)[0m
[1;32m    637[0m [38;5;66;03m# According to RFC 2616, "2xx" code indicates that the client's[39;00m
[1;32m    638[0m [38;5;66;03m# request was successfully received, understood, and accepted.[39;00m
[1;32m    639[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m ([38;5;241m200[39m [38;5;241m<[39m[38;5;241m=[39m code [38;5;241m<[39m [38;5;241m300[39m):
[0;32m--> 640[0m     response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mparent[49m[38;5;241;43m.[39;49m[43merror[49m[43m([49m
[1;32m    641[0m [43m        [49m[38;5;124;43m'[39;49m[38;5;124;43mhttp[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mrequest[49m[43m,[49m[43m [49m[43mresponse[49m[43m,[49m[43m [49m[43mcode[49m[43m,[49m[43m [49m[43mmsg[49m[43m,[49m[43m [49m[43mhdrs[49m[43m)[49m
[1;32m    643[0m [38;5;28;01mreturn[39;00m response

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/urllib/request.py:569[0m, in [0;36mOpenerDirector.error[0;34m(self, proto, *args)[0m
[1;32m    567[0m [38;5;28;01mif[39;00m http_err:
[1;32m    568[0m     args [38;5;241m=[39m ([38;5;28mdict[39m, [38;5;124m'[39m[38;5;124mdefault[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mhttp_error_default[39m[38;5;124m'[39m) [38;5;241m+[39m orig_args
[0;32m--> 569[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_call_chain[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/urllib/request.py:502[0m, in [0;36mOpenerDirector._call_chain[0;34m(self, chain, kind, meth_name, *args)[0m
[1;32m    500[0m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[1;32m    501[0m     func [38;5;241m=[39m [38;5;28mgetattr[39m(handler, meth_name)
[0;32m--> 502[0m     result [38;5;241m=[39m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m)[49m
[1;32m    503[0m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    504[0m         [38;5;28;01mreturn[39;00m result

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/urllib/request.py:649[0m, in [0;36mHTTPDefaultErrorHandler.http_error_default[0;34m(self, req, fp, code, msg, hdrs)[0m
[1;32m    648[0m [38;5;28;01mdef[39;00m [38;5;21mhttp_error_default[39m([38;5;28mself[39m, req, fp, code, msg, hdrs):
[0;32m--> 649[0m     [38;5;28;01mraise[39;00m HTTPError(req[38;5;241m.[39mfull_url, code, msg, hdrs, fp)

[0;31mHTTPError[0m: HTTP Error 404: Not Found
HTTPError: HTTP Error 404: Not Found

