Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from mlxtend.evaluate import bias_variance_decomp
from sklearn.tree import DecisionTreeClassifier
from mlxtend.data import iris_data
from sklearn.model_selection import train_test_split
from sklearn.ensemble import BaggingClassifier

# Get Data Set

label_scaler = StandardScaler()
y_scaled = label_scaler.fit_transform(y.reshape(-1, 1)).ravel()
# X_train, X_test, y_train, y_test = train_test_split(X_scaled, y_scaled,
X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.1, random_state=123, shuffle=True
)
# Define Algorithm

res = {"bias": [], "var": [], "mse": []}


for lambda_ in lambdas:
    ridge = Ridge(alpha=lambda_)
    avg_expected_loss, avg_bias, avg_var = bias_variance_decomp(
        ridge, X_train, y_train, X_test, y_test, loss="mse", random_seed=123
    )
    res["bias"].append(avg_bias)
    res["var"].append(avg_var)
    # res['mse'].append(mean_squared_error(y_test, ridge.predict(X_test)))
    res["mse"].append(avg_expected_loss)


# # Get Bias and Variance - bias_variance_decomp function
# avg_expected_loss, avg_bias, avg_var = bias_variance_decomp(
# bag, X_train_ds, y_train_ds, X_test_ds, y_test_ds,
# loss='0-1_loss',
# random_seed=123,
# num_rounds=1000)
# # Display Bias and Variance
# print(f'Average Expected Loss: {round(avg_expected_loss, 4)}n')
# print(f'Average Bias: {round(avg_bias, 4)}')
# print(f'Average Variance: {round(avg_var, 4)}')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn [6], line 1[0m
[0;32m----> 1[0m [38;5;28;01mfrom[39;00m [38;5;21;01mmlxtend[39;00m[38;5;21;01m.[39;00m[38;5;21;01mevaluate[39;00m [38;5;28;01mimport[39;00m bias_variance_decomp
[1;32m      2[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mtree[39;00m [38;5;28;01mimport[39;00m DecisionTreeClassifier
[1;32m      3[0m [38;5;28;01mfrom[39;00m [38;5;21;01mmlxtend[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdata[39;00m [38;5;28;01mimport[39;00m iris_data

[0;31mModuleNotFoundError[0m: No module named 'mlxtend'
ModuleNotFoundError: No module named 'mlxtend'

